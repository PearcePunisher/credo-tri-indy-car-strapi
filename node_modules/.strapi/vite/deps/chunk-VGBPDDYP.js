import {
  createContext
} from "./chunk-G2B764WL.js";
import {
  axios_default
} from "./chunk-BBOBYZHR.js";
import {
  require_jsx_runtime
} from "./chunk-LMPM4PM5.js";
import {
  require_react
} from "./chunk-D3I3COXH.js";
import {
  __toESM
} from "./chunk-LK32TJAX.js";

// node_modules/@strapi/plugin-documentation/node_modules/@strapi/admin/dist/admin/admin/src/features/AppInfo.mjs
var [AppInfoProvider, useAppInfo] = createContext("AppInfo", {});

// node_modules/@strapi/plugin-documentation/node_modules/@strapi/admin/dist/admin/admin/src/features/Tracking.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var React = __toESM(require_react(), 1);
var TrackingContext = React.createContext({
  uuid: false
});
var useTracking = () => {
  const { uuid, telemetryProperties } = React.useContext(TrackingContext);
  const userId = useAppInfo("useTracking", (state) => state.userId);
  const trackUsage = React.useCallback(async (event, properties) => {
    try {
      if (uuid && !window.strapi.telemetryDisabled) {
        const res = await axios_default.post(`${process.env.STRAPI_ANALYTICS_URL || "https://analytics.strapi.io"}/api/v2/track`, {
          event,
          userId,
          eventProperties: {
            ...properties
          },
          userProperties: {},
          groupProperties: {
            ...telemetryProperties,
            projectId: uuid,
            projectType: window.strapi.projectType
          }
        }, {
          headers: {
            "Content-Type": "application/json",
            "X-Strapi-Event": event
          }
        });
        return res;
      }
    } catch (err) {
    }
    return null;
  }, [
    telemetryProperties,
    userId,
    uuid
  ]);
  return {
    trackUsage
  };
};

export {
  AppInfoProvider,
  useAppInfo,
  useTracking
};
//# sourceMappingURL=chunk-VGBPDDYP.js.map
