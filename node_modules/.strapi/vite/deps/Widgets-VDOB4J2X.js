import {
  DocumentStatus,
  RelativeTime
} from "./chunk-YY567PWB.js";
import {
  contentManagerApi
} from "./chunk-CTBVAZVA.js";
import {
  useIntl
} from "./chunk-5EN3QLZH.js";
import "./chunk-ESW3776S.js";
import {
  Widget
} from "./chunk-74FWCDSU.js";
import "./chunk-3UGWAPIM.js";
import "./chunk-4J3VOWQV.js";
import "./chunk-JM3URC3B.js";
import "./chunk-Z5NQM5WA.js";
import "./chunk-BPK3766W.js";
import "./chunk-4QEVO6IX.js";
import "./chunk-ERYIV7BU.js";
import "./chunk-EFEN674V.js";
import "./chunk-EV6X5A2V.js";
import "./chunk-75TNEA2Q.js";
import "./chunk-QXCZ2YBG.js";
import "./chunk-GQ2JMBIB.js";
import "./chunk-X52F6W5B.js";
import "./chunk-MBK4V2X7.js";
import "./chunk-AL6V3OQJ.js";
import "./chunk-K65KIEAL.js";
import "./chunk-3HWYEI6C.js";
import "./chunk-V45UDSP6.js";
import "./chunk-4AH7WTO2.js";
import "./chunk-ZHB3N2WI.js";
import "./chunk-EWDWV4DG.js";
import {
  useTracking
} from "./chunk-FD2H3MIB.js";
import "./chunk-QIJGNK42.js";
import "./chunk-BIQI77GC.js";
import "./chunk-Z7R4NZ4X.js";
import "./chunk-TE6UJKY7.js";
import "./chunk-Q47RGQAB.js";
import "./chunk-V63U5T3Y.js";
import "./chunk-UTA4CBMC.js";
import "./chunk-D4WYVNVM.js";
import "./chunk-MMOBCIZG.js";
import "./chunk-IFOFBKTA.js";
import "./chunk-QKEQ3HUY.js";
import "./chunk-EGNP2T5O.js";
import "./chunk-YXDCVYVT.js";
import "./chunk-3WRAURKR.js";
import "./chunk-BB4PYHK6.js";
import "./chunk-KYADUQO6.js";
import "./chunk-FANXGEP7.js";
import "./chunk-6YVRNWDD.js";
import "./chunk-PQINNV4N.js";
import "./chunk-VYSYYPOB.js";
import "./chunk-OKTKVEC5.js";
import "./chunk-DSLNL255.js";
import "./chunk-Q545U5BG.js";
import "./chunk-BHLYCXQ7.js";
import "./chunk-BLJUR3JO.js";
import "./chunk-OGGJT27I.js";
import "./chunk-7HC342IZ.js";
import "./chunk-KIMAI7AV.js";
import "./chunk-CE4VABH2.js";
import "./chunk-5VODLFKF.js";
import {
  Box,
  IconButton,
  Table,
  Tbody,
  Td,
  Tr,
  Typography
} from "./chunk-PBK5FWSU.js";
import "./chunk-5ZC4PE57.js";
import {
  Link,
  useNavigate
} from "./chunk-TUXTO2Z5.js";
import "./chunk-FOD4ENRR.js";
import {
  ForwardRef$1v
} from "./chunk-QXF2FKMZ.js";
import {
  require_jsx_runtime
} from "./chunk-NIAJZ5MX.js";
import {
  dt
} from "./chunk-6EUTJK7T.js";
import "./chunk-MADUDGYZ.js";
import {
  __toESM
} from "./chunk-PLDDJCW6.js";

// node_modules/@strapi/content-manager/dist/admin/components/Widgets.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);

// node_modules/@strapi/content-manager/dist/admin/services/homepage.mjs
var homepageService = contentManagerApi.injectEndpoints({
  /**
  * TODO: Remove overrideExisting when we remove the future flag
  * and delete the old homepage service in the admin
  */
  overrideExisting: true,
  endpoints: (builder) => ({
    getRecentDocuments: builder.query({
      query: (params) => `/admin/homepage/recent-documents?action=${params.action}`,
      transformResponse: (response) => response.data,
      providesTags: (res, _err, { action }) => [
        {
          type: "RecentDocumentList",
          id: action
        }
      ]
    })
  })
});
var { useGetRecentDocumentsQuery } = homepageService;

// node_modules/@strapi/content-manager/dist/admin/components/Widgets.mjs
var CellTypography = dt(Typography).attrs({
  maxWidth: "14.4rem",
  display: "block"
})`
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
`;
var RecentDocumentsTable = ({ documents }) => {
  const { formatMessage } = useIntl();
  const { trackUsage } = useTracking();
  const navigate = useNavigate();
  const getEditViewLink = (document) => {
    const isSingleType = document.kind === "singleType";
    const kindPath = isSingleType ? "single-types" : "collection-types";
    const queryParams = document.locale ? `?plugins[i18n][locale]=${document.locale}` : "";
    return `/content-manager/${kindPath}/${document.contentTypeUid}${isSingleType ? "" : "/" + document.documentId}${queryParams}`;
  };
  const handleRowClick = (document) => () => {
    trackUsage("willEditEntryFromHome");
    const link = getEditViewLink(document);
    navigate(link);
  };
  return (0, import_jsx_runtime.jsx)(Table, {
    colCount: 5,
    rowCount: (documents == null ? void 0 : documents.length) ?? 0,
    children: (0, import_jsx_runtime.jsx)(Tbody, {
      children: documents == null ? void 0 : documents.map((document) => (0, import_jsx_runtime.jsxs)(Tr, {
        onClick: handleRowClick(document),
        cursor: "pointer",
        children: [
          (0, import_jsx_runtime.jsx)(Td, {
            children: (0, import_jsx_runtime.jsx)(CellTypography, {
              title: document.title,
              variant: "omega",
              textColor: "neutral800",
              children: document.title
            })
          }),
          (0, import_jsx_runtime.jsx)(Td, {
            children: (0, import_jsx_runtime.jsx)(CellTypography, {
              variant: "omega",
              textColor: "neutral600",
              children: document.kind === "singleType" ? formatMessage({
                id: "content-manager.widget.last-edited.single-type",
                defaultMessage: "Single-Type"
              }) : formatMessage({
                id: document.contentTypeDisplayName,
                defaultMessage: document.contentTypeDisplayName
              })
            })
          }),
          (0, import_jsx_runtime.jsx)(Td, {
            children: (0, import_jsx_runtime.jsx)(Box, {
              display: "inline-block",
              children: document.status ? (0, import_jsx_runtime.jsx)(DocumentStatus, {
                status: document.status
              }) : (0, import_jsx_runtime.jsx)(Typography, {
                textColor: "neutral600",
                "aria-hidden": true,
                children: "-"
              })
            })
          }),
          (0, import_jsx_runtime.jsx)(Td, {
            children: (0, import_jsx_runtime.jsx)(Typography, {
              textColor: "neutral600",
              children: (0, import_jsx_runtime.jsx)(RelativeTime, {
                timestamp: new Date(document.updatedAt)
              })
            })
          }),
          (0, import_jsx_runtime.jsx)(Td, {
            onClick: (e) => e.stopPropagation(),
            children: (0, import_jsx_runtime.jsx)(Box, {
              display: "inline-block",
              children: (0, import_jsx_runtime.jsx)(IconButton, {
                tag: Link,
                to: getEditViewLink(document),
                onClick: () => trackUsage("willEditEntryFromHome"),
                label: formatMessage({
                  id: "content-manager.actions.edit.label",
                  defaultMessage: "Edit"
                }),
                variant: "ghost",
                children: (0, import_jsx_runtime.jsx)(ForwardRef$1v, {})
              })
            })
          })
        ]
      }, document.documentId))
    })
  });
};
var LastEditedWidget = () => {
  const { formatMessage } = useIntl();
  const { data, isLoading, error } = useGetRecentDocumentsQuery({
    action: "update"
  });
  if (isLoading) {
    return (0, import_jsx_runtime.jsx)(Widget.Loading, {});
  }
  if (error || !data) {
    return (0, import_jsx_runtime.jsx)(Widget.Error, {});
  }
  if (data.length === 0) {
    return (0, import_jsx_runtime.jsx)(Widget.NoData, {
      children: formatMessage({
        id: "content-manager.widget.last-edited.no-data",
        defaultMessage: "No edited entries"
      })
    });
  }
  return (0, import_jsx_runtime.jsx)(RecentDocumentsTable, {
    documents: data
  });
};
var LastPublishedWidget = () => {
  const { formatMessage } = useIntl();
  const { data, isLoading, error } = useGetRecentDocumentsQuery({
    action: "publish"
  });
  if (isLoading) {
    return (0, import_jsx_runtime.jsx)(Widget.Loading, {});
  }
  if (error || !data) {
    return (0, import_jsx_runtime.jsx)(Widget.Error, {});
  }
  if (data.length === 0) {
    return (0, import_jsx_runtime.jsx)(Widget.NoData, {
      children: formatMessage({
        id: "content-manager.widget.last-published.no-data",
        defaultMessage: "No published entries"
      })
    });
  }
  return (0, import_jsx_runtime.jsx)(RecentDocumentsTable, {
    documents: data
  });
};
export {
  LastEditedWidget,
  LastPublishedWidget
};
//# sourceMappingURL=Widgets-VDOB4J2X.js.map
