{
  "version": 3,
  "sources": ["../../../strapi-plugin-schema-visualizer/dist/admin/index.mjs"],
  "sourcesContent": ["import { useRef, useEffect } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nimport { OneToMany } from \"@strapi/icons\";\nconst __variableDynamicImportRuntimeHelper = (glob, path, segs) => {\n  const v = glob[path];\n  if (v) {\n    return typeof v === \"function\" ? v() : Promise.resolve(v);\n  }\n  return new Promise((_, reject) => {\n    (typeof queueMicrotask === \"function\" ? queueMicrotask : setTimeout)(\n      reject.bind(\n        null,\n        new Error(\n          \"Unknown variable dynamic import: \" + path + (path.split(\"/\").length !== segs ? \". Note that variables only represent file names one level deep.\" : \"\")\n        )\n      )\n    );\n  });\n};\nconst PLUGIN_ID = \"schema-visualizer\";\nconst Initializer = ({ setPlugin }) => {\n  const ref = useRef(setPlugin);\n  useEffect(() => {\n    ref.current(PLUGIN_ID);\n  }, []);\n  return null;\n};\nconst PluginIcon = () => /* @__PURE__ */ jsx(OneToMany, {});\nconst index = {\n  register(app) {\n    app.addMenuLink({\n      to: `plugins/${PLUGIN_ID}`,\n      icon: PluginIcon,\n      intlLabel: {\n        id: `${PLUGIN_ID}.plugin.name`,\n        defaultMessage: PLUGIN_ID\n      },\n      Component: async () => {\n        const { App } = await import(\"../_chunks/App-DYzhipN3.mjs\");\n        return App;\n      }\n    });\n    app.registerPlugin({\n      id: PLUGIN_ID,\n      initializer: Initializer,\n      isReady: false,\n      name: PLUGIN_ID\n    });\n  },\n  async registerTrads({ locales }) {\n    return Promise.all(\n      locales.map(async (locale) => {\n        try {\n          const { default: data } = await __variableDynamicImportRuntimeHelper(/* @__PURE__ */ Object.assign({ \"./translations/en.json\": () => import(\"../_chunks/en-Byx4XI2L.mjs\") }), `./translations/${locale}.json`, 3);\n          return { data, locale };\n        } catch {\n          return { data: {}, locale };\n        }\n      })\n    );\n  }\n};\nexport {\n  index as default\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;AAAA,mBAAkC;AAClC,yBAAoB;AAEpB,IAAM,uCAAuC,CAAC,MAAM,MAAM,SAAS;AACjE,QAAM,IAAI,KAAK,IAAI;AACnB,MAAI,GAAG;AACL,WAAO,OAAO,MAAM,aAAa,EAAE,IAAI,QAAQ,QAAQ,CAAC;AAAA,EAC1D;AACA,SAAO,IAAI,QAAQ,CAAC,GAAG,WAAW;AAChC,KAAC,OAAO,mBAAmB,aAAa,iBAAiB;AAAA,MACvD,OAAO;AAAA,QACL;AAAA,QACA,IAAI;AAAA,UACF,sCAAsC,QAAQ,KAAK,MAAM,GAAG,EAAE,WAAW,OAAO,oEAAoE;AAAA,QACtJ;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AACH;AACA,IAAM,YAAY;AAClB,IAAM,cAAc,CAAC,EAAE,UAAU,MAAM;AACrC,QAAM,UAAM,qBAAO,SAAS;AAC5B,8BAAU,MAAM;AACd,QAAI,QAAQ,SAAS;AAAA,EACvB,GAAG,CAAC,CAAC;AACL,SAAO;AACT;AACA,IAAM,aAAa,UAAsB,wBAAI,eAAW,CAAC,CAAC;AAC1D,IAAM,QAAQ;AAAA,EACZ,SAAS,KAAK;AACZ,QAAI,YAAY;AAAA,MACd,IAAI,WAAW,SAAS;AAAA,MACxB,MAAM;AAAA,MACN,WAAW;AAAA,QACT,IAAI,GAAG,SAAS;AAAA,QAChB,gBAAgB;AAAA,MAClB;AAAA,MACA,WAAW,YAAY;AACrB,cAAM,EAAE,IAAI,IAAI,MAAM,OAAO,4BAA6B;AAC1D,eAAO;AAAA,MACT;AAAA,IACF,CAAC;AACD,QAAI,eAAe;AAAA,MACjB,IAAI;AAAA,MACJ,aAAa;AAAA,MACb,SAAS;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AAAA,EACA,MAAM,cAAc,EAAE,QAAQ,GAAG;AAC/B,WAAO,QAAQ;AAAA,MACb,QAAQ,IAAI,OAAO,WAAW;AAC5B,YAAI;AACF,gBAAM,EAAE,SAAS,KAAK,IAAI,MAAM,qCAAqD,OAAO,OAAO,EAAE,0BAA0B,MAAM,OAAO,2BAA4B,EAAE,CAAC,GAAG,kBAAkB,MAAM,SAAS,CAAC;AAChN,iBAAO,EAAE,MAAM,OAAO;AAAA,QACxB,QAAQ;AACN,iBAAO,EAAE,MAAM,CAAC,GAAG,OAAO;AAAA,QAC5B;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AACF;",
  "names": []
}
