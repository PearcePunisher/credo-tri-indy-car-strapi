{
  "version": 3,
  "sources": ["../../../@strapi/plugin-documentation/node_modules/@strapi/admin/admin/src/components/Context.tsx"],
  "sourcesContent": ["import * as React from 'react';\n\nimport * as ContextSelector from 'use-context-selector';\n\n/**\n * @experimental\n * @description Create a context provider and a hook to consume the context.\n *\n * @warning this may be removed to the design-system instead of becoming stable.\n */\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = ContextSelector.createContext<ContextValueType | undefined>(defaultContext);\n\n  const Provider = (props: ContextValueType & { children: React.ReactNode }) => {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  };\n\n  function useContext<Selected, ShouldThrow extends boolean = true>(\n    consumerName: string,\n    selector: (value: ContextValueType) => Selected,\n    shouldThrowOnMissingContext?: ShouldThrow\n  ) {\n    return ContextSelector.useContextSelector(Context, (ctx) => {\n      // The context is available, return the selected value\n      if (ctx) return selector(ctx);\n\n      // The context is not available, either return undefined or throw an error\n      if (shouldThrowOnMissingContext) {\n        throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n      }\n\n      return undefined;\n    }) as ShouldThrow extends true ? Selected : Selected | undefined;\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n\n  return [Provider, useContext] as const;\n}\n\nexport { createContext };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAUA,SAASA,cACPC,mBACAC,gBAAiC;AAEjC,QAAMC,UAA0BH,EAA4CE,cAAAA;AAE5E,QAAME,WAAW,CAACC,UAAAA;AAChB,UAAM,EAAEC,UAAU,GAAGC,QAAAA,IAAYF;AAGjC,UAAMG,QAAcC,cAAQ,MAAMF,SAASG,OAAOC,OAAOJ,OAAAA,CAAAA;AAEzD,eAAOK,wBAACT,QAAQC,UAAQ;MAACI;MAAeF;;EAC1C;AAEA,WAASO,WACPC,cACAC,UACAC,6BAAyC;AAEzC,WAAuBC,EAAmBd,SAAS,CAACe,QAAAA;AAElD,UAAIA,IAAK,QAAOH,SAASG,GAAAA;AAGzB,UAAIF,6BAA6B;AAC/B,cAAM,IAAIG,MAAM,KAAKL,YAAAA,4BAAwCb,iBAAkB,IAAG;MACpF;AAEA,aAAOmB;IACT,CAAA;EACF;AAEAhB,WAASiB,cAAcpB,oBAAoB;AAE3C,SAAO;IAACG;IAAUS;EAAW;AAC/B;",
  "names": ["createContext", "rootComponentName", "defaultContext", "Context", "Provider", "props", "children", "context", "value", "useMemo", "Object", "values", "_jsx", "useContext", "consumerName", "selector", "shouldThrowOnMissingContext", "useContextSelector", "ctx", "Error", "undefined", "displayName"]
}
