import {
  Layouts
} from "./chunk-YTWJNXYP.js";
import {
  useGetPluginsQuery
} from "./chunk-6CDTD2HW.js";
import {
  Page,
  useAPIErrorHandler
} from "./chunk-P53GS5WO.js";
import "./chunk-KSTSL6WI.js";
import {
  useTypedSelector
} from "./chunk-H4FYAPMB.js";
import {
  useNotification
} from "./chunk-G5QNJA6N.js";
import "./chunk-E32XYDKH.js";
import "./chunk-KSOT2AXF.js";
import "./chunk-G2B764WL.js";
import "./chunk-P7O5ST42.js";
import "./chunk-3GJUYW3U.js";
import "./chunk-MSZWIWYK.js";
import "./chunk-EPIVQ5PX.js";
import "./chunk-SSL4NJ75.js";
import "./chunk-DGOK5JXW.js";
import "./chunk-HM5YIFDI.js";
import "./chunk-QOUV5O5E.js";
import {
  useIntl
} from "./chunk-V5B6IART.js";
import "./chunk-RKN75MQZ.js";
import {
  Table,
  Tbody,
  Td,
  Th,
  Thead,
  Tr,
  Typography,
  useNotifyAT
} from "./chunk-EEEY2MTU.js";
import "./chunk-RJW6B5XN.js";
import "./chunk-AWHRF5BE.js";
import {
  require_jsx_runtime
} from "./chunk-LMPM4PM5.js";
import "./chunk-OSJEGB6V.js";
import {
  require_react
} from "./chunk-D3I3COXH.js";
import {
  __toESM
} from "./chunk-LK32TJAX.js";

// node_modules/@strapi/plugin-documentation/node_modules/@strapi/admin/dist/admin/admin/src/pages/Settings/pages/InstalledPlugins.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var React = __toESM(require_react(), 1);
var InstalledPlugins = () => {
  var _a;
  const { formatMessage } = useIntl();
  const { notifyStatus } = useNotifyAT();
  const { toggleNotification } = useNotification();
  const { _unstableFormatAPIError: formatAPIError } = useAPIErrorHandler();
  const { isLoading, data, error } = useGetPluginsQuery();
  React.useEffect(() => {
    if (data) {
      notifyStatus(formatMessage({
        id: "app.utils.notify.data-loaded",
        defaultMessage: "The {target} has loaded"
      }, {
        target: formatMessage({
          id: "global.plugins",
          defaultMessage: "Plugins"
        })
      }));
    }
    if (error) {
      toggleNotification({
        type: "danger",
        message: formatAPIError(error)
      });
    }
  }, [
    data,
    error,
    formatAPIError,
    formatMessage,
    notifyStatus,
    toggleNotification
  ]);
  if (isLoading) {
    return (0, import_jsx_runtime.jsx)(Page.Loading, {});
  }
  return (0, import_jsx_runtime.jsx)(Layouts.Root, {
    children: (0, import_jsx_runtime.jsxs)(Page.Main, {
      children: [
        (0, import_jsx_runtime.jsx)(Layouts.Header, {
          title: formatMessage({
            id: "global.plugins",
            defaultMessage: "Plugins"
          }),
          subtitle: formatMessage({
            id: "app.components.ListPluginsPage.description",
            defaultMessage: "List of the installed plugins in the project."
          })
        }),
        (0, import_jsx_runtime.jsx)(Layouts.Content, {
          children: (0, import_jsx_runtime.jsxs)(Table, {
            colCount: 2,
            rowCount: ((_a = data == null ? void 0 : data.plugins) == null ? void 0 : _a.length) ?? 0 + 1,
            children: [
              (0, import_jsx_runtime.jsx)(Thead, {
                children: (0, import_jsx_runtime.jsxs)(Tr, {
                  children: [
                    (0, import_jsx_runtime.jsx)(Th, {
                      children: (0, import_jsx_runtime.jsx)(Typography, {
                        variant: "sigma",
                        textColor: "neutral600",
                        children: formatMessage({
                          id: "global.name",
                          defaultMessage: "Name"
                        })
                      })
                    }),
                    (0, import_jsx_runtime.jsx)(Th, {
                      children: (0, import_jsx_runtime.jsx)(Typography, {
                        variant: "sigma",
                        textColor: "neutral600",
                        children: formatMessage({
                          id: "global.description",
                          defaultMessage: "description"
                        })
                      })
                    })
                  ]
                })
              }),
              (0, import_jsx_runtime.jsx)(Tbody, {
                children: data == null ? void 0 : data.plugins.map(({ name, displayName, description }) => {
                  return (0, import_jsx_runtime.jsxs)(Tr, {
                    children: [
                      (0, import_jsx_runtime.jsx)(Td, {
                        children: (0, import_jsx_runtime.jsx)(Typography, {
                          textColor: "neutral800",
                          variant: "omega",
                          fontWeight: "bold",
                          children: formatMessage({
                            id: `global.plugins.${name}`,
                            defaultMessage: displayName
                          })
                        })
                      }),
                      (0, import_jsx_runtime.jsx)(Td, {
                        children: (0, import_jsx_runtime.jsx)(Typography, {
                          textColor: "neutral800",
                          children: formatMessage({
                            id: `global.plugins.${name}.description`,
                            defaultMessage: description
                          })
                        })
                      })
                    ]
                  }, name);
                })
              })
            ]
          })
        })
      ]
    })
  });
};
var ProtectedInstalledPlugins = () => {
  var _a;
  const { formatMessage } = useIntl();
  const permissions = useTypedSelector((state) => state.admin_app.permissions);
  return (0, import_jsx_runtime.jsxs)(Page.Protect, {
    permissions: (_a = permissions.marketplace) == null ? void 0 : _a.main,
    children: [
      (0, import_jsx_runtime.jsx)(Page.Title, {
        children: formatMessage({
          id: "global.plugins",
          defaultMessage: "Plugins"
        })
      }),
      (0, import_jsx_runtime.jsx)(InstalledPlugins, {})
    ]
  });
};
export {
  InstalledPlugins,
  ProtectedInstalledPlugins
};
//# sourceMappingURL=InstalledPlugins-L4ESFBZU.js.map
