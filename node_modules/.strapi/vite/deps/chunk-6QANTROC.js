import {
  require_trimEnd
} from "./chunk-P7O5ST42.js";
import {
  adminApi
} from "./chunk-G5SV3N5D.js";
import {
  __toESM
} from "./chunk-LK32TJAX.js";

// node_modules/@strapi/admin/dist/admin/admin/src/utils/urls.mjs
var import_trimEnd = __toESM(require_trimEnd(), 1);
var prefixFileUrlWithBackendUrl = (fileURL) => {
  return !!fileURL && fileURL.startsWith("/") ? `${window.strapi.backendURL}${fileURL}` : fileURL;
};
var createAbsoluteUrl = (url) => {
  if (!url) {
    return window.location.origin;
  }
  if (url.startsWith("/")) {
    return (0, import_trimEnd.default)(new URL(url, window.location.origin).toString(), "/");
  } else {
    return url;
  }
};

// node_modules/@strapi/admin/dist/admin/admin/src/services/admin.mjs
var admin = adminApi.enhanceEndpoints({
  addTagTypes: [
    "ProjectSettings",
    "LicenseLimits",
    "LicenseTrialTimeLeft",
    "GuidedTourMeta"
  ]
}).injectEndpoints({
  endpoints: (builder) => ({
    init: builder.query({
      query: () => ({
        url: "/admin/init",
        method: "GET"
      }),
      transformResponse(res) {
        return res.data;
      },
      providesTags: [
        "ProjectSettings"
      ]
    }),
    information: builder.query({
      query: () => ({
        url: "/admin/information",
        method: "GET"
      }),
      transformResponse(res) {
        return res.data;
      }
    }),
    telemetryProperties: builder.query({
      query: () => ({
        url: "/admin/telemetry-properties",
        method: "GET",
        config: {
          validateStatus: (status) => status < 500
        }
      }),
      transformResponse(res) {
        return res.data;
      }
    }),
    projectSettings: builder.query({
      query: () => ({
        url: "/admin/project-settings",
        method: "GET"
      }),
      providesTags: [
        "ProjectSettings"
      ],
      transformResponse(data) {
        return {
          authLogo: data.authLogo ? {
            name: data.authLogo.name,
            url: prefixFileUrlWithBackendUrl(data.authLogo.url)
          } : void 0,
          menuLogo: data.menuLogo ? {
            name: data.menuLogo.name,
            url: prefixFileUrlWithBackendUrl(data.menuLogo.url)
          } : void 0
        };
      }
    }),
    updateProjectSettings: builder.mutation({
      query: (data) => ({
        url: "/admin/project-settings",
        method: "POST",
        data,
        config: {
          headers: {
            "Content-Type": "multipart/form-data"
          }
        }
      }),
      invalidatesTags: [
        "ProjectSettings"
      ]
    }),
    getPlugins: builder.query({
      query: () => ({
        url: "/admin/plugins",
        method: "GET"
      })
    }),
    getLicenseLimits: builder.query({
      query: () => ({
        url: "/admin/license-limit-information",
        method: "GET"
      }),
      providesTags: [
        "LicenseLimits"
      ]
    }),
    getLicenseTrialTimeLeft: builder.query({
      query: () => ({
        url: "/admin/license-trial-time-left",
        method: "GET"
      }),
      providesTags: [
        "LicenseTrialTimeLeft"
      ]
    }),
    getGuidedTourMeta: builder.query({
      query: () => ({
        url: "/admin/guided-tour-meta",
        method: "GET"
      }),
      providesTags: [
        "GuidedTourMeta"
      ]
    })
  }),
  overrideExisting: false
});
var { useInitQuery, useTelemetryPropertiesQuery, useInformationQuery, useProjectSettingsQuery, useUpdateProjectSettingsMutation, useGetPluginsQuery, useGetLicenseLimitsQuery, useGetLicenseTrialTimeLeftQuery, useGetGuidedTourMetaQuery } = admin;

export {
  createAbsoluteUrl,
  useInitQuery,
  useTelemetryPropertiesQuery,
  useInformationQuery,
  useProjectSettingsQuery,
  useUpdateProjectSettingsMutation,
  useGetPluginsQuery,
  useGetLicenseLimitsQuery,
  useGetLicenseTrialTimeLeftQuery,
  useGetGuidedTourMetaQuery
};
//# sourceMappingURL=chunk-6QANTROC.js.map
